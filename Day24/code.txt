int x=0;
int y=0;
int z=0;
int w=0;
w = inputNum[0];
x = (x) * (0) ;
x = (x) + (z) ;
if(x < 0){
return -100000;
}
if(26 <= 0){
return -100000;
}
x = (x) % (26) ;
if(1 == 0){
return -100000;
}
z = (z) / (1) ;
x = (x) + (13) ;
if(x == w){
  x = 1;
}else{
  x = 0;
}
if(x == 0){
  x = 1;
}else{
  x = 0;
}
y = (y) * (0) ;
y = (y) + (25) ;
y = (y) * (x) ;
y = (y) + (1) ;
z = (z) * (y) ;
y = (y) * (0) ;
y = (y) + (w) ;
y = (y) + (10) ;
y = (y) * (x) ;
z = (z) + (y) ;
w = inputNum[1];
x = (x) * (0) ;
x = (x) + (z) ;
if(x < 0){
return -100000;
}
if(26 <= 0){
return -100000;
}
x = (x) % (26) ;
if(1 == 0){
return -100000;
}
z = (z) / (1) ;
x = (x) + (11) ;
if(x == w){
  x = 1;
}else{
  x = 0;
}
if(x == 0){
  x = 1;
}else{
  x = 0;
}
y = (y) * (0) ;
y = (y) + (25) ;
y = (y) * (x) ;
y = (y) + (1) ;
z = (z) * (y) ;
y = (y) * (0) ;
y = (y) + (w) ;
y = (y) + (16) ;
y = (y) * (x) ;
z = (z) + (y) ;
w = inputNum[2];
x = (x) * (0) ;
x = (x) + (z) ;
if(x < 0){
return -100000;
}
if(26 <= 0){
return -100000;
}
x = (x) % (26) ;
if(1 == 0){
return -100000;
}
z = (z) / (1) ;
x = (x) + (11) ;
if(x == w){
  x = 1;
}else{
  x = 0;
}
if(x == 0){
  x = 1;
}else{
  x = 0;
}
y = (y) * (0) ;
y = (y) + (25) ;
y = (y) * (x) ;
y = (y) + (1) ;
z = (z) * (y) ;
y = (y) * (0) ;
y = (y) + (w) ;
y = (y) + (0) ;
y = (y) * (x) ;
z = (z) + (y) ;
w = inputNum[3];
x = (x) * (0) ;
x = (x) + (z) ;
if(x < 0){
return -100000;
}
if(26 <= 0){
return -100000;
}
x = (x) % (26) ;
if(1 == 0){
return -100000;
}
z = (z) / (1) ;
x = (x) + (10) ;
if(x == w){
  x = 1;
}else{
  x = 0;
}
if(x == 0){
  x = 1;
}else{
  x = 0;
}
y = (y) * (0) ;
y = (y) + (25) ;
y = (y) * (x) ;
y = (y) + (1) ;
z = (z) * (y) ;
y = (y) * (0) ;
y = (y) + (w) ;
y = (y) + (13) ;
y = (y) * (x) ;
z = (z) + (y) ;
w = inputNum[4];
x = (x) * (0) ;
x = (x) + (z) ;
if(x < 0){
return -100000;
}
if(26 <= 0){
return -100000;
}
x = (x) % (26) ;
if(26 == 0){
return -100000;
}
z = (z) / (26) ;
x = (x) + (-14) ;
if(x == w){
  x = 1;
}else{
  x = 0;
}
if(x == 0){
  x = 1;
}else{
  x = 0;
}
y = (y) * (0) ;
y = (y) + (25) ;
y = (y) * (x) ;
y = (y) + (1) ;
z = (z) * (y) ;
y = (y) * (0) ;
y = (y) + (w) ;
y = (y) + (7) ;
y = (y) * (x) ;
z = (z) + (y) ;
w = inputNum[5];
x = (x) * (0) ;
x = (x) + (z) ;
if(x < 0){
return -100000;
}
if(26 <= 0){
return -100000;
}
x = (x) % (26) ;
if(26 == 0){
return -100000;
}
z = (z) / (26) ;
x = (x) + (-4) ;
if(x == w){
  x = 1;
}else{
  x = 0;
}
if(x == 0){
  x = 1;
}else{
  x = 0;
}
y = (y) * (0) ;
y = (y) + (25) ;
y = (y) * (x) ;
y = (y) + (1) ;
z = (z) * (y) ;
y = (y) * (0) ;
y = (y) + (w) ;
y = (y) + (11) ;
y = (y) * (x) ;
z = (z) + (y) ;
w = inputNum[6];
x = (x) * (0) ;
x = (x) + (z) ;
if(x < 0){
return -100000;
}
if(26 <= 0){
return -100000;
}
x = (x) % (26) ;
if(1 == 0){
return -100000;
}
z = (z) / (1) ;
x = (x) + (11) ;
if(x == w){
  x = 1;
}else{
  x = 0;
}
if(x == 0){
  x = 1;
}else{
  x = 0;
}
y = (y) * (0) ;
y = (y) + (25) ;
y = (y) * (x) ;
y = (y) + (1) ;
z = (z) * (y) ;
y = (y) * (0) ;
y = (y) + (w) ;
y = (y) + (11) ;
y = (y) * (x) ;
z = (z) + (y) ;
w = inputNum[7];
x = (x) * (0) ;
x = (x) + (z) ;
if(x < 0){
return -100000;
}
if(26 <= 0){
return -100000;
}
x = (x) % (26) ;
if(26 == 0){
return -100000;
}
z = (z) / (26) ;
x = (x) + (-3) ;
if(x == w){
  x = 1;
}else{
  x = 0;
}
if(x == 0){
  x = 1;
}else{
  x = 0;
}
y = (y) * (0) ;
y = (y) + (25) ;
y = (y) * (x) ;
y = (y) + (1) ;
z = (z) * (y) ;
y = (y) * (0) ;
y = (y) + (w) ;
y = (y) + (10) ;
y = (y) * (x) ;
z = (z) + (y) ;
w = inputNum[8];
x = (x) * (0) ;
x = (x) + (z) ;
if(x < 0){
return -100000;
}
if(26 <= 0){
return -100000;
}
x = (x) % (26) ;
if(1 == 0){
return -100000;
}
z = (z) / (1) ;
x = (x) + (12) ;
if(x == w){
  x = 1;
}else{
  x = 0;
}
if(x == 0){
  x = 1;
}else{
  x = 0;
}
y = (y) * (0) ;
y = (y) + (25) ;
y = (y) * (x) ;
y = (y) + (1) ;
z = (z) * (y) ;
y = (y) * (0) ;
y = (y) + (w) ;
y = (y) + (16) ;
y = (y) * (x) ;
z = (z) + (y) ;
w = inputNum[9];
x = (x) * (0) ;
x = (x) + (z) ;
if(x < 0){
return -100000;
}
if(26 <= 0){
return -100000;
}
x = (x) % (26) ;
if(26 == 0){
return -100000;
}
z = (z) / (26) ;
x = (x) + (-12) ;
if(x == w){
  x = 1;
}else{
  x = 0;
}
if(x == 0){
  x = 1;
}else{
  x = 0;
}
y = (y) * (0) ;
y = (y) + (25) ;
y = (y) * (x) ;
y = (y) + (1) ;
z = (z) * (y) ;
y = (y) * (0) ;
y = (y) + (w) ;
y = (y) + (8) ;
y = (y) * (x) ;
z = (z) + (y) ;
w = inputNum[10];
x = (x) * (0) ;
x = (x) + (z) ;
if(x < 0){
return -100000;
}
if(26 <= 0){
return -100000;
}
x = (x) % (26) ;
if(1 == 0){
return -100000;
}
z = (z) / (1) ;
x = (x) + (13) ;
if(x == w){
  x = 1;
}else{
  x = 0;
}
if(x == 0){
  x = 1;
}else{
  x = 0;
}
y = (y) * (0) ;
y = (y) + (25) ;
y = (y) * (x) ;
y = (y) + (1) ;
z = (z) * (y) ;
y = (y) * (0) ;
y = (y) + (w) ;
y = (y) + (15) ;
y = (y) * (x) ;
z = (z) + (y) ;
w = inputNum[11];
x = (x) * (0) ;
x = (x) + (z) ;
if(x < 0){
return -100000;
}
if(26 <= 0){
return -100000;
}
x = (x) % (26) ;
if(26 == 0){
return -100000;
}
z = (z) / (26) ;
x = (x) + (-12) ;
if(x == w){
  x = 1;
}else{
  x = 0;
}
if(x == 0){
  x = 1;
}else{
  x = 0;
}
y = (y) * (0) ;
y = (y) + (25) ;
y = (y) * (x) ;
y = (y) + (1) ;
z = (z) * (y) ;
y = (y) * (0) ;
y = (y) + (w) ;
y = (y) + (2) ;
y = (y) * (x) ;
z = (z) + (y) ;
w = inputNum[12];
x = (x) * (0) ;
x = (x) + (z) ;
if(x < 0){
return -100000;
}
if(26 <= 0){
return -100000;
}
x = (x) % (26) ;
if(26 == 0){
return -100000;
}
z = (z) / (26) ;
x = (x) + (-15) ;
if(x == w){
  x = 1;
}else{
  x = 0;
}
if(x == 0){
  x = 1;
}else{
  x = 0;
}
y = (y) * (0) ;
y = (y) + (25) ;
y = (y) * (x) ;
y = (y) + (1) ;
z = (z) * (y) ;
y = (y) * (0) ;
y = (y) + (w) ;
y = (y) + (5) ;
y = (y) * (x) ;
z = (z) + (y) ;
w = inputNum[13];
x = (x) * (0) ;
x = (x) + (z) ;
if(x < 0){
return -100000;
}
if(26 <= 0){
return -100000;
}
x = (x) % (26) ;
if(26 == 0){
return -100000;
}
z = (z) / (26) ;
x = (x) + (-12) ;
if(x == w){
  x = 1;
}else{
  x = 0;
}
if(x == 0){
  x = 1;
}else{
  x = 0;
}
y = (y) * (0) ;
y = (y) + (25) ;
y = (y) * (x) ;
y = (y) + (1) ;
z = (z) * (y) ;
y = (y) * (0) ;
y = (y) + (w) ;
y = (y) + (10) ;
y = (y) * (x) ;
z = (z) + (y) ;
return z;
